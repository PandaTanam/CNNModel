name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - dev-cc

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # Update to your Google Cloud project ID
  REGION: ${{ secrets.GCP_REGION }} # Update to your region
  SERVICE: ${{ secrets.GCP_SERVICE_NAME }} # Update to your service name
  WORKLOAD_IDENTITY_PROVIDER: 'projects/920676430522/locations/global/workloadIdentityPools/github-pool/providers/github' # Update to your workload identity provider

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Authenticate to Google Cloud using Workload Identity Federation
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'  # Specify token format
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          project_id: '${{ env.PROJECT_ID }}' 

      # Authenticate Docker to Google Artifact Registry
      - name: 'Authenticate Docker to Google Artifact Registry'
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin ${{ env.REGION }}-docker.pkg.dev

      # Build and Push Docker Container
      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/plantcare-api/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

      # Deploy to Cloud Run
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/plantcare-api/${{ env.SERVICE }}:${{ github.sha }}'

      # Show output of the deployment
      - name: 'Show output'
        run: |
          echo "Cloud Run URL: ${{ steps.deploy.outputs.url }}"
